trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  artifactStagingDirectory: '$(Build.ArtifactStagingDirectory)'

steps:
# 1. Install NuGet
- task: NuGetToolInstaller@1

# 2. Restore NuGet packages
- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

# 3. Build the solution and create a Web Deploy package
- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(artifactStagingDirectory)"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

# 4. (Optional) Publish the build artifacts
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(artifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'

# 5. Deploy the package to the Azure Web App
- task: AzureRmWebAppDeployment@4
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'Visual Studio Enterprise Subscription â€“ MPN(00b80849-20f9-4e1e-b698-573ed62c37b3)'
    appType: 'webApp'
    WebAppName: 'hallodoctest'
    package: '$(artifactStagingDirectory)/**/HalloDoc.zip'
    # configuration: '$(buildConfiguration)'   # Optional: only include if required

# 6. Run tests (if any)
- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
